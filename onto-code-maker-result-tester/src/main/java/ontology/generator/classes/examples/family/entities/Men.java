package ontology.generator.classes.examples.family.entities;

import org.eclipse.rdf4j.model.*;
import java.util.List;
import java.util.ArrayList;
import ontology.generator.classes.examples.family.Vocabulary;

/**
*  This is the class representing the Men(http://www.ontocodemaker.org/Family#Men) class from ontology
*  This class is subclass of  Human
*
*  Men
*  This is men
*  Author of class Tomas
*   This class is disjoint with classes:
*        Woman(http://www.ontocodemaker.org/Family#Woman)
.
*
*   Generated by OntoCodeMaker
**/
public class Men extends  Human {

    // IRI Constant of Class
    public static IRI CLASS_IRI = Vocabulary.MEN_CLASS_IRI;

    /**
    * Property http://www.ontocodemaker.org/Family#hasWife
    **/
    private WomanInt hasWife;

    /**
    * Property http://www.ontocodemaker.org/Family#hasSpouse
    * The property is SubProperty of  hasWife
    **/
    private List<WomanInt> hasSpouse = new ArrayList<>();

    /**
    * Property http://www.ontocodemaker.org/Family#hasLuckyNumbers. This property is from super class.
*  These are lucky numbers
*  hasLuckyNumbers
    **/
    private List<Integer> hasLuckyNumbers = new ArrayList<>();

    /**
    * Property http://www.ontocodemaker.org/Family#hasAge. This property is from super class.
*  This is hasAge
*  hasAge
    **/
    private Integer hasAge;

    /**
    * Property http://www.ontocodemaker.org/Family#hasCat. This property is from super class.
    **/
    private List<Cat> hasCat = new ArrayList<>();

    /**
    * Property http://www.ontocodemaker.org/Family#hasDog. This property is from super class.
*  This is hasDog
*  hasDog
    **/
    private Dog hasDog;

    /**
    * Property http://www.ontocodemaker.org/Family#age. This property is from super class.
    * The property is SubProperty of  hasAge
    **/
    private List<Integer> age = new ArrayList<>();

    /**
    * Property http://www.ontocodemaker.org/Family#hasDogEq. This property is from super class.
    * The property is equivalent to hasDog
    **/
    private List<Dog> hasDogEq = new ArrayList<>();


    public Men(IRI iri){
            super(iri);
    }


    public IRI getClassIRI() {
        return CLASS_IRI;
    }

    public void setHasWife(WomanInt hasWife){
        this.hasWife = hasWife;
    }
    public WomanInt getHasWife(){
        return hasWife;
    }

    public void addHasSpouse(WomanInt hasSpouse){
        this.hasSpouse.add(hasSpouse);
        if(this.hasWife == null || !this.hasWife.equals(hasSpouse)){
            this.hasWife = hasSpouse;
        }
    }
    public List<WomanInt> getHasSpouse(){
        return hasSpouse;
    }


    public void addHasLuckyNumbers(Integer hasLuckyNumbers){
        this.hasLuckyNumbers.add(hasLuckyNumbers);
    }
    public List<Integer> getHasLuckyNumbers(){
        return hasLuckyNumbers;
    }
    public void setHasAge(Integer hasAge){
        this.hasAge = hasAge;
    }
    public Integer getHasAge(){
        return hasAge;
    }
    public void addHasCat(Cat hasCat){
        this.hasCat.add(hasCat);
    }
    public List<Cat> getHasCat(){
        return hasCat;
    }
    public void setHasDog(Dog hasDog){
        this.hasDog = hasDog;
        if(!this.hasDogEq.contains(hasDog)){
            this.hasDogEq.add(hasDog);
        }
    }
    public Dog getHasDog(){
        return hasDog;
    }
    public void addAge(Integer age){
        this.age.add(age);
        if(this.hasAge == null || !this.hasAge.equals(age)){
            this.hasAge = age;
        }
    }
    public List<Integer> getAge(){
        return age;
    }
    public List<Dog> getHasDogEq(){
        return hasDogEq;
    }

}

