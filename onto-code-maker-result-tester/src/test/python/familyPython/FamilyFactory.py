from rdflib import URIRef
from rdflib.namespace import RDF
from entities.Human import Human
from entities.Child import Child
from entities.Person import Person
from entities.Father import Father
from entities.Parent import Parent
from entities.Mother import Mother
from entities.Woman import Woman
from entities.Doggy import Doggy
from entities.Cat import Cat
from entities.Men import Men
from entities.ChildlessPerson import ChildlessPerson
from entities.Dog import Dog
from entities.Pet import Pet
from Vocabulary import Vocabulary
from SerialializationFactory import SerialializationFactory
##
# This Code is generated from these ontologies
# Ontology: Family
# Prior version: http://www.example.org/2021/priorVersionTest 
#
#   This ontology Was created for testing OntoCodeMaker.
#   Family
#
#
#   Generated by OntoCodeMaker
##
class FamilyFactory:
    def __init__(self, ontology):
        self.ontology = ontology
        self.serializationFactory = SerialializationFactory()

    def getOntology(self):
        return self.ontology

    def addToModel(self, entity):
        self.serializationFactory.getSerializationInstanceFromEntity(entity).addToModel(self.ontology, entity)


    def createHuman(self,name):
        return Human(URIRef(name))

    def getHumanFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.HUMAN_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllHumanInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.HUMAN_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeHumanFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.HUMAN_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createChild(self,name):
        return Child(URIRef(name))

    def getChildFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILD_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllChildInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILD_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeChildFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILD_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createPerson(self,name):
        return Person(URIRef(name))

    def getPersonFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PERSON_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllPersonInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PERSON_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removePersonFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PERSON_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createFather(self,name):
        return Father(URIRef(name))

    def getFatherFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.FATHER_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllFatherInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.FATHER_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeFatherFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.FATHER_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createParent(self,name):
        return Parent(URIRef(name))

    def getParentFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PARENT_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllParentInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PARENT_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeParentFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PARENT_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createMother(self,name):
        return Mother(URIRef(name))

    def getMotherFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MOTHER_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllMotherInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MOTHER_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeMotherFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MOTHER_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createWoman(self,name):
        return Woman(URIRef(name))

    def getWomanFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.WOMAN_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllWomanInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.WOMAN_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeWomanFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.WOMAN_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createDoggy(self,name):
        return Doggy(URIRef(name))

    def getDoggyFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOGGY_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllDoggyInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOGGY_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeDoggyFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOGGY_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createCat(self,name):
        return Cat(URIRef(name))

    def getCatFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CAT_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllCatInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CAT_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeCatFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CAT_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createMen(self,name):
        return Men(URIRef(name))

    def getMenFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MEN_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllMenInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MEN_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeMenFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.MEN_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createChildlessPerson(self,name):
        return ChildlessPerson(URIRef(name))

    def getChildlessPersonFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILDLESSPERSON_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllChildlessPersonInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILDLESSPERSON_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeChildlessPersonFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.CHILDLESSPERSON_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createDog(self,name):
        return Dog(URIRef(name))

    def getDogFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOG_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllDogInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOG_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removeDogFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.DOG_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))


    def createPet(self,name):
        return Pet(URIRef(name))

    def getPetFromModel(self,name):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PET_CLASS_IRI).getInstanceFromModel(self.ontology,URIRef(name),2)

    def getAllPetInstancesFromModel(self):
        return self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PET_CLASS_IRI).getAllInstancesFromModel(self.ontology,2)

    def removePetFromModel(self,name):
        self.serializationFactory.getSerializationInstanceFromIri(Vocabulary.PET_CLASS_IRI).removeInstanceFromModel(self.ontology,URIRef(name))

